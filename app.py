# app.py
import streamlit as st
import requests
import base64
from PIL import Image
from io import BytesIO

# --- Page Configuration ---
st.set_page_config(
    page_title="Stable Diffusion UI",
    page_icon="ðŸš€",
    layout="wide"
)

# --- Main Application ---
st.title("ðŸš€ Stable Diffusion Image Generator")
st.markdown("Enter a text prompt to generate an image using a backend API.")

# --- API URL Input ---
st.sidebar.header("API Configuration")
api_url = st.sidebar.text_input(
    "Enter Backend API URL",
    placeholder="https://xxxxxxxxxxxx.ngrok-free.app",
    help="This is the public URL generated by your backend script."
)

# --- Image Generation Form ---
st.header("Image Prompt")
prompt = st.text_area(
    "Enter your prompt",
    height=100,
    placeholder="e.g., A photo of an astronaut riding a horse on Mars"
)

generate_button = st.button("Generate Image", type="primary")

# --- Image Generation Logic ---
if generate_button:
    if not api_url:
        st.error("Please enter the Backend API URL in the sidebar.")
    elif not prompt:
        st.error("Please enter a prompt to generate an image.")
    else:
        full_api_url = f"{api_url}/generate"
        payload = {"caption": prompt}

        try:
            with st.spinner("Generating image... This may take a moment."):
                response = requests.post(full_api_url, json=payload, timeout=120)

            if response.status_code == 200:
                data = response.json()
                if "image_base64" in data:
                    img_data = base64.b64decode(data["image_base64"])
                    img = Image.open(BytesIO(img_data))
                    
                    st.success("Image generated successfully!")
                    st.image(img, caption="Generated Image", use_column_width=True)
                else:
                    error_message = data.get("error", "Unknown error from API.")
                    st.error(f"API Error: {error_message}")
            else:
                st.error(f"Failed to reach the backend. Status code: {response.status_code}")
                st.code(response.text)

        except requests.exceptions.RequestException as e:
            st.error(f"A network error occurred: {e}")
            st.info("Please ensure the backend server is running and the API URL is correct and accessible.")

# --- Example Prompts ---
st.sidebar.header("Example Prompts")
examples = [
    "A high-quality photo of a delicious ceviche cheesecake slice",
    "An astronaut riding a green horse on Mars, cinematic lighting, 8k",
    "A watercolor painting of a panda playing a banjo in a bamboo forest",
]
for ex in examples:
    st.sidebar.markdown(f"- `{ex}`")
